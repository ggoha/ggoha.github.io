<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Иногда я делаю сайты]]></title>
  <link href="http://ggoha.github.io/atom.xml" rel="self"/>
  <link href="http://ggoha.github.io/"/>
  <updated>2016-12-06T16:51:33+03:00</updated>
  <id>http://ggoha.github.io/</id>
  <author>
    <name><![CDATA[ggoha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ssh с телефона]]></title>
    <link href="http://ggoha.github.io/blog/2016/12/05/ssh-s-tieliefona/"/>
    <updated>2016-12-05T23:33:11+03:00</updated>
    <id>http://ggoha.github.io/blog/2016/12/05/ssh-s-tieliefona</id>
    <content type="html"><![CDATA[<p>Если что-то выглядит как безумие, используется как безумие да и звучит как безумие, то согласно утиной типизации это безумие. Данная статья рассказывает о подключении телефона к серверу по ssh и еще паре таких вещей.
В playmarkete достаточно много приложений посвященных подключению с телефона по ssh. Я остановлюсь на <a href="https://termux.com/">Termux</a>. Это не ssh клиент, это полноценный эмулятор терминала и окружения Linux с подтержкой нескольких сессий.</p>

<!-- more -->


<p>Для поддержки ssh достатчно сделать</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt install ssh</span></code></pre></td></tr></table></div></figure>


<p>
А вот с этого места поподробнее, подумал я. <em>apt install</em> говорите. Больше из любопытства я ввел</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt install fish</span></code></pre></td></tr></table></div></figure>


<p>
<img src="http://ggoha.github.io/images/fish.jpg">
И через пару секунд экран терминала заиграл привычными моему глазу цветами дружелюбного shella. Что меня удивило, можно поставить python, ruby, htop&hellip;
<img src="http://ggoha.github.io/images/htop.jpg">
Also есть vi. Но для относительно нормальной работы с консолью и редактором нужны клавиши которых нет на стандартной клавиатуре, для выхода из этой ситуации подходит <a href="https://play.google.com/store/apps/details?id=org.pocketworkstation.pckeyboard&amp;hl=ru">Hacker&rsquo;s keyboard</a>.
<img src="http://ggoha.github.io/images/hackers_keyboard.jpg">
В альбомном режиме клавиатура имеет и стрелки, и ctrl, и shift и даже функциональные клавиши. С данным приложением использовать Termux гораздо лучше.
Таким образом возможно подключиться без компа, а только с телефона, к серверу и выполнить как консольные команды так и правку файлов через vi вполне сносным способом.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Краткий справочник по испанскому языку на 1 семестр]]></title>
    <link href="http://ggoha.github.io/blog/2016/12/04/kratkii-spravochnik-po-ispanskomu-iazyku-na-1-siemiestr/"/>
    <updated>2016-12-04T17:44:02+03:00</updated>
    <id>http://ggoha.github.io/blog/2016/12/04/kratkii-spravochnik-po-ispanskomu-iazyku-na-1-siemiestr</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Mi familia</h2>

<p>Mi madre es alta, rubia y delegada. Ella es profesora. Mi madre es muy trabajadora. Mi madre se llama Tatiana.
Mi padre es mecánico. Mi padre se llama Alejandro. Alejandro es mayor, alto y moreno.
Mis padres son de Yaroslavl. Yo soy de Yaroslavl. Yo tengo un primo y prima. Mi prima se llamo Natasha. Natasha es javen y guapa. Ella esta casada. Mi prima tiene 2 niños. Ellos son mis sobrinos.
Mi primo se llama Aleksey.</p>

<h2>Mi habitación</h2>

<p>En mi habitación hay uno ventana. Detrás de la ventana esta un balcón pequeño. En mi habitación hay tres mesas grande. Cerca de la ventana esta dos mesas modernas. La tercera mesa esta al fondo de la habitación. En la mesa hay una lámpara barata. En casa no hay alfombra y televisión. En mi habitación hay seis sillas. Las sillas están delante de las mesas. Una puerta esta al fondo de la habitación. Todavía hay una cuadrada librería.</p>

<h2>Mi dia + Mi semana</h2>

<h2>España + Andalucía</h2>

<p>España esta el sudoeste de Europa. La capital es Madrid y esta en el centro del pais. España es una monárquia parlamentaria. Hoy cuatro lenguas oficiales: el español el gallego, el vasco y el catalan. En España hay mas de cuarenta y seis milliones de habitantes. Cíudades importantes son: Barcelona, Bilbao, Valencia, Sevilla y Zaragoza. Universidad de Zaragoza es muy antigua. El turismo es el principal recurso económico. Andalucía es una Comunidad Autónoma de España. Está en el sur de España. En Andalucía hay más de siete millones de habitantes. Sevilla es l a capital de Andalucía. Hay también muchos monumentos y museos.</p>

<h2>Fiestas</h2>

<p>el año nuevo es la fiesta mas importante en rusia. La celebración del año nuevo empieza el día treinta y uno de diciembre. por la noche los rusos se reúnen con la familia y con sus amigos para despedir el año. Todos ponen el árbol de navidad. A las doce menos diez todos escuchan el discurso del presidente y a medianoche proponen unos deseos. Después todos comen, beben y ven la tele. Los platos son ensalada rusa y bocadillos con caviar. Sobre las dos los niños van a dormir y los adultos salen de casa. Yo prefiero celebrar el ano nuevo con mi familia. Nosotros comemos, bebemos, vemos la tele. Luego vamos al centro de la ciudad donde hay un abeto muy grande y bonita</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Резервное копирование в Rails приложении]]></title>
    <link href="http://ggoha.github.io/blog/2016/12/03/rieziervnoie-kopirovaniie-v-rails-prilozhienii/"/>
    <updated>2016-12-03T19:56:14+03:00</updated>
    <id>http://ggoha.github.io/blog/2016/12/03/rieziervnoie-kopirovaniie-v-rails-prilozhienii</id>
    <content type="html"><![CDATA[<p>Никогда не поздно начать делать бекапы, подумал я, и решил автоматизировать данный процесс в своем приложении. После похода на <a href="">The Ruby Toolbox</a> я остановился на геме <a href="https://github.com/backup/backup">backup</a></p>

<!-- more -->


<h2>Установка</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install backup</span></code></pre></td></tr></table></div></figure>


<p><strong>Важно</strong> не пытаться повторять мои ошибки и не ставить гем через bundler, иначе на второй запуск вы рискуете получить
NameError: uninitialized constant Module::Rails</p>

<h2>Настройка</h2>

<p>Создаем модель, которая и будет осуществлять создание наших резервных копий, следующей командой</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>backup generate:model  --config-file='config/backup/config.rb' --trigger my_backup \
</span><span class='line'>    --databases="postgresql" --storages="dropbox" \
</span><span class='line'>    --encryptor="openssl" --compressor="gzip" --notifiers="mail"</span></code></pre></td></tr></table></div></figure>


<p>Здесь мы создаем конфиг, расположенный по адресу <strong>config/backup/config.rb</strong> и модель к нему по адресу config/backup/models/my_backup.rb.
Модель будет настроена для работы с PostgreSQL базой данных, сжатием, шифрованием openssl, хранением на Dropbox и уведомлением по почте.
Dropbox используется так как проект не очень большой и 2Гб Dropbox хватает с лихвой.
Сама модель очень подробно откоментирована, поэтому я остановлюсь лишь на некоторых моментах.
Для работы с Dropbox нужно будет кроме регистрации создать еще и приложение <a href="https://www.dropbox.com/developers/apps">здесь</a>. В качестве разрешений достаточно работы с папкой. А при первом создании резервной копии нужно будет вручную перейти по ссылке в консоли для подтверждения прав доступа.
Так же возножно понадобится установить дополнительные модули. Например, модуль работы с Dropbox</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>backup dependencies --install dropbox-sdk</span></code></pre></td></tr></table></div></figure>


<p>Для сохранения не только базы, но и например пользовательских картинок нужно вставит</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>archive :my_archive do |archive|
</span><span class='line'>    archive.add 'path/to/users/pictures'
</span><span class='line'>  end</span></code></pre></td></tr></table></div></figure>


<p>Собственно запуск процесса резервного копирования</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>backup perform --trigger my_backup --config-file /config/backup/config.rb</span></code></pre></td></tr></table></div></figure>


<p>Расшифровка зашифрованного содержимого</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>openssl aes-256-cbc -d -base64 -in my_backup.tar.enc  -out my_backup.tar</span></code></pre></td></tr></table></div></figure>


<p>Осталось только положить такую задачу в cron например на 2 часа ночи ежедневно</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2 2 * * * root cd /home/deploy/apps/olimpaid/shared && /home/deploy/.rbenv/shims/backup perform --trigger my_backup --config-file /home/deploy/apps/olimpaid/current/config/backup/config.rb</span></code></pre></td></tr></table></div></figure>


<p>Лучше прописывать абсолютные пути(путь до backup можно посмотреть через whereis), cd нужно для корректной работы добавления в архив папки с нашими картинками.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Удаление ошибок роутинга из Rollbar]]></title>
    <link href="http://ggoha.github.io/blog/2016/12/02/udalieniie-oshibok-routingha-iz-rollbar/"/>
    <updated>2016-12-02T15:35:35+03:00</updated>
    <id>http://ggoha.github.io/blog/2016/12/02/udalieniie-oshibok-routingha-iz-rollbar</id>
    <content type="html"><![CDATA[<p><a href="https://rollbar.com/">Rollbar</a> - замечательный инструмент для ловли ошибок на production, он избавляет от необходимости grep-ать логи и представляет сообщения об ошибках в крайне удобной форме и с массой полезной информации. К тому же он имеет бесплатное ограничение в 5000 ошибок, поэтому постараемся уменьшить количество ошибок долетающих до Rollbar</p>

<!-- more -->


<h2>Rollbar</h2>

<p>Данный пост посвящен не столь rollbar, сколько исправлению ошибок роутинга, но, возможно, я исправлю это упущение</p>

<h2>No route matches [GET] &ldquo;/ffhnzushqco.html&rdquo;</h2>

<p>Вот такого рода запросы частенько сыплются на мой сервер.
<img src="http://ggoha.github.io/images/rollbar.png"></p>

<p>Их цель естественно понятна, но все равно забавно наблюдать зоопарк запросов и бразузеров многие из которых упрямо стучатся на admin.php и /wordpress
Для обработки таких ошибок добавим им корректную обработку в роутинге.
В самый конец <strong>routes.rb</strong> добавим обработку всех остальных случаев, которые не нашли совпадения с прописанным нами роутингом.</p>

<figure class='code'><figcaption><span>routes.rb</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">match</span> <span class="s1">&#39;*a&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;application#page_404&#39;</span><span class="p">,</span> <span class="ss">via</span><span class="p">:</span> <span class="o">[</span><span class="ss">:get</span><span class="p">,</span> <span class="ss">:post</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Так же при желании можно ловить и delete, и put, и path.
В контролере пропишем</p>

<figure class='code'><figcaption><span>application_controller.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="k">def</span> <span class="nf">page_404</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">file</span><span class="p">:</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/public/404.html&quot;</span><span class="p">,</span> <span class="ss">layout</span><span class="p">:</span> <span class="kp">false</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="mi">404</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Мы успешно обработали все неизвестные запросы.</p>

<h2>Дополнительно</h2>

<p>Совсем терять эти ошибки не хочется, кроме мусора там попадаются, например, ошибки получения картинок с нашего сайта, что необходимо исправлять. Как вариант, предлагается записывать все такие обращения просто в файл.
Для этого изменим наш контроллер</p>

<figure class='code'><figcaption><span>application_controller.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'>  <span class="k">def</span> <span class="nf">page_404</span>
</span><span class='line'>    <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/log/404.log&quot;</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span> <span class="n">file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">request</span><span class="o">.</span><span class="n">original_url</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">file</span><span class="p">:</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/public/404.html&quot;</span><span class="p">,</span> <span class="ss">layout</span><span class="p">:</span> <span class="kp">false</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="mi">404</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Здесь мы открываем файл на дозапись и сохраняет адрес страницы, которую мы не можем найти. Кроме того, чтобы этот файл не перезатирался при деплое, он сохраняется в log.</p>

<p>Чтобы Capistrano не перезатирал папки при деплое</p>

<figure class='code'><figcaption><span>example deploy.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:linked_dirs</span><span class="p">,</span>  <span class="sx">%w{bin log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system}</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Пост про этот пост]]></title>
    <link href="http://ggoha.github.io/blog/2016/12/01/post-pro-etot-post/"/>
    <updated>2016-12-01T15:29:26+03:00</updated>
    <id>http://ggoha.github.io/blog/2016/12/01/post-pro-etot-post</id>
    <content type="html"><![CDATA[<p>В какой-то момент я решил все-таки перенести свою маленькую записную книжку по тем приемам, которые я использовал во время создания различных сайтов, из отдельного списка в Trello в нечто более осязаемое, например, блог. Ну и еще немного практики никому не мешало.</p>

<!-- more -->


<h2>Выбор</h2>

<p>Писать свой собственный движок для блога я не стал, возможно в качестве первого(ну или почти первого) знакомства с rails это хорошая идея(<a href="https://www.railstutorial.org/" title="Ruby on Rails Tutorial (Rails 5)">1</a>), но для меня это все-таки больше записная книжка. Выбор осуществлялся достаточно просто, путем захода на <a href="https://www.ruby-toolbox.com/categories/Blog_Engines">The Ruby Toolbox</a> и беглым знакомством с уже существующими решениями. Так мой выбор пал на <a href="http://octopress.org">Octopress</a></p>

<h2>Установка</h2>

<p>Будем считать что у нас уже есть установленный rvm(или rbenv) а так же ruby.</p>

<figure class='code'><figcaption><span>bash </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<p>Устанавливаем для начала дефолтную тему</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install['THEME_NAME']
</span><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<p>Конфигурационный файл можно пока не трогать
Посмотреть, что получается из коробки можно следующим образом</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>Данные команды перегенируют статические страницы и выводят результат по-умолчанию на <a href="localhost:4000">localhost:4000</a></p>

<h3>Настройка</h3>

<h4>Русификация</h4>

<p>Для изменения большинства вещей необходимо править файлы папки source.
Для категорий и кнопки далее нужно править <strong>_config.yml</strong></p>

<figure class='code'><figcaption><span>_config.yml </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">category_title_prefix</span><span class="p-Indicator">:</span> <span class="s">&quot;Тег:</span><span class="nv"> </span><span class="s">&quot;</span>
</span><span class='line'><span class="nn">...</span>
</span><span class='line'><span class="l-Scalar-Plain">excerpt_link</span><span class="p-Indicator">:</span> <span class="s">&quot;Далее</span><span class="nv"> </span><span class="s">&amp;rarr;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Изменение даты</h4>

<h3>Хостинг</h3>

<p>Так как в результате работы получаются статические страницы, то вполне резонно использовать не полноценный сервер, а просто хостера статических сайтов, благо Octopress предлагает <a href="http://octopress.org/docs/deploying/">3 варианта</a>. Я остановился на GitHub Pages.<br/>
<a href="http://isizov.ru/github-kak-hosting-dlya-sajtov/">После создания соответствующего репозитория</a>
Необходимо выполнить</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>и указать SSH или HTTPS URL до вашего репозитория.
Затем надо выполнить</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p>или одной командой</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake gen_deploy</span></code></pre></td></tr></table></div></figure>


<p>Затем надо выполнить</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m 'your message'
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<h2>Создание поста</h2>

<p>Теперь мы получили пустой блог. Займемся его наполнением.
Для добавления нового поста, например, этого, введем</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["Пост про этот пост"]</span></code></pre></td></tr></table></div></figure>


<p>После этого название транслитерируется и становится доступным по адресу, структура которого указана в <strong>_config.yml</strong>
Сам файл будет почти пустым</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "Пост про данный пост"
</span><span class='line'>date: 2016-12-01 11:12:15 +0300
</span><span class='line'>comments: true
</span><span class='line'>categories: 
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<p>Здесь можно добавить категории и дополнительно указать автора.
Далее идет пространство для непостредственно написания текста поста. Для этого используется язык разметки Markdown. <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet">Синтаксис</a> очень простой, практически ничего не отвлекает от непосредственно написания текста.</p>

<h3>Добавление картинок</h3>

<p>Дополнительнительную информацию вы всегда можете получить <a href="https://github.com/octopress/image-tag">здесь</a></p>

<h3>Оформление кода</h3>

<p>В моем случае, я часто использовал вставки кода, поэтому важно чтобы они были красиво оформленны. В Markdown есть выделение и подсветка синтакиса, но специальный плагин <a href="https://github.com/octopress/codeblock">Codeblock</a> делает это гораздо красивее. В частности все вставки кода в этой статье были выполнены именно с его использованием.
Дополнительнительную информацию вы всегда можете получить <a href="https://github.com/octopress/codeblock">здесь</a></p>
]]></content>
  </entry>
  
</feed>
